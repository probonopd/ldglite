language: cpp
sudo: required
dist: trusty
cache: ccache

git:
  depth: 200

branches:
  only:
  - master

addons:
  apt:
    packages:
    - libosmesa6-dev
    - freeglut3-dev
    - libpng-dev

matrix:
 fast_finish: true
 include:
  - os: linux
    compiler: gcc
    env:
     - QT_BASE=59
  - os: osx
    compiler: clang
    env:
     - QT_BASE=59

before_install:
  # Skip build if the commit message contains [skip travis] or [travis skip]
  - >
      echo "$TRAVIS_COMMIT_MESSAGE"
      | grep -E  '\[(skip travis|travis skip)\]'
      && echo "[skip travis] detected, exiting."
      && exit 0 || true
  # Build package if commit message contains [build pkg]
  - >
      echo "$TRAVIS_COMMIT_MESSAGE"
      | grep -E  '\[build pkg\]'
      && echo "[build pkg] detected."
      && export LDGL_BUILD_PKG=yes || true
  # Build and deploy package if commit message contains [deploy pkg]
  - >
      echo "$TRAVIS_COMMIT_MESSAGE"
      | grep -E  '\[deploy pkg\]'
      && echo "[deploy pkg] detected."
      && export LDGL_BUILD_PKG=yes
      && export LDGL_DEPLOY_PKG=yes || true
  # Add private qt repositories
  - if [[ "$QT_BASE" = "59" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt592-trusty -y; fi
  # Update repository index and download package dependencies/docker-engine if required
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo apt-get update -qq;
      export LDGL_REPO_NAME=lpub3d_linux_3rdparty;
    else
      brew update;
      brew install ccache;
      export PATH="/usr/local/opt/ccache/libexec:$PATH";
      export LDGL_REPO_NAME=lpub3d_macos_3rdparty;
    fi

install:
  # Install qt5 on Linux
  - if [[ "$QT_BASE" = "59" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt59base; source /opt/qt59/bin/qt59-env.sh; fi
  # Install qt5 on MacOS, clone lpub3d_macos_3rd party repository and download LDraw library archive files
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
        brew install qt5;
        brew link --force qt5;
    fi

script:
  - qmake -v
  - qmake CONFIG+=3RD_PARTY_INSTALL=${LDGL_REPO_NAME} CONFIG+=release PREFIX=/usr
  - qmake CONFIG+=release 
  - make -j$(nproc)
  - make INSTALL_ROOT=appdir -j$(nproc) install ; find appdir/
  - mkdir -p appdir/usr/share/icons/hicolor/256x256/apps/ ; touch appdir/usr/share/icons/hicolor/256x256/apps/ldglite.png # FIXME
  - mkdir -p appdir/usr/share/applications/ ; cp ldglite.desktop appdir/usr/share/applications/
  - wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
  - chmod a+x linuxdeployqt*.AppImage
  - unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH
  - export VERSION=$(git rev-parse --short HEAD) # linuxdeployqt uses this for naming the file
  - ./linuxdeployqt*.AppImage ./appdir/usr/share/applications/*.desktop -bundle-non-qt-libs
  - ./linuxdeployqt*.AppImage ./appdir/usr/share/applications/*.desktop -appimage
  
after_success:
  - find ./appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
  - # curl --upload-file ./APPNAME*.AppImage https://transfer.sh/APPNAME-git.$(git rev-parse --short HEAD)-x86_64.AppImage
  - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  - bash upload.sh ./ldglite*.AppImage*
  
branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)$/
